module pointersCodeAnalyses

import lang::java::m3::Core;
import lang::java::jdt::m3::Core;

// Rascal has a lot of nice features for code inspection 
// Int handy to unserstand the basics of it. First, it works a lot with LOC's. If we analyze some code:

public M3 tree = createM3FromEclipseProject(|project://HelloWorld|);

//rascal>tree
//M3: m3(|project://HelloWorld|)[
//  @annotations={},
//  @typeDependency={
//    <|java+class:///SomeOtherClass|,|java+primitiveType:///int|>,
//    <|java+parameter:///HelloWorld/main(java.lang.String%5B%5D)/scope(args)/scope(0)/args|,|java+array:///java/lang/String%5B%5D|>,
//    <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+class:///java/io/PrintStream|>,
//    <|java+method:///SomeOtherClass/SomePrivateMethod()|,|java+primitiveType:///int|>,
//    <|java+parameter:///HelloWorld/main(java.lang.String%5B%5D)/scope(args)/scope(0)/args|,|java+class:///java/lang/String|>,
//    <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+class:///java/lang/System|>,
//    <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+primitiveType:///void|>,
//    <|java+method:///SomeOtherClass/SomeMethod()|,|java+primitiveType:///int|>
//  },
//  @methodOverrides={},
//  @names={
//    <"System",|java+class:///java/lang/System|>,
//    <"SomePrivateMethod",|java+method:///SomeOtherClass/SomePrivateMethod()|>,
//    <"main",|java+method:///HelloWorld/main(java.lang.String%5B%5D)|>,
//    <"args",|java+parameter:///HelloWorld/main(java.lang.String%5B%5D)/scope(args)/scope(0)/args|>,
//    <"println",|java+method:///java/io/PrintStream/println(java.lang.String)|>,
//    <"SomeOtherClass",|java+class:///SomeOtherClass|>,
//    <"HelloWorld",|java+class:///HelloWorld|>,
//    <"privmv",|java+field:///SomeOtherClass/privmv|>,
//    <"out",|java+field:///java/lang/System/out|>,
//    <"SomeMethod",|java+method:///SomeOtherClass/SomeMethod()|>,
//    <"pubmv",|java+field:///SomeOtherClass/pubmv|>,
//    <"String",|java+class:///java/lang/String|>
//  },
//  @implements={},
//  @methodInvocation={<|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+method:///java/io/PrintStream/println(java.lang.String)|>},
//  @containment={
//    <|java+class:///SomeOtherClass|,|java+field:///SomeOtherClass/privmv|>,
//    <|java+compilationUnit:///Users/Bouke/Documents/workspace3/HelloWorld/src/HelloWorld.java|,|java+class:///HelloWorld|>,
//    <|java+class:///SomeOtherClass|,|java+field:///SomeOtherClass/pubmv|>,
//    <|java+class:///HelloWorld|,|java+method:///HelloWorld/main(java.lang.String%5B%5D)|>,
//    <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+parameter:///HelloWorld/main(java.lang.String%5B%5D)/scope(args)/scope(0)/args|>,
//    <|java+class:///SomeOtherClass|,|java+method:///SomeOtherClass/SomeMethod()|>,
//    <|java+compilationUnit:///Users/Bouke/Documents/workspace3/HelloWorld/src/SomeOtherClass.java|,|java+class:///SomeOtherClass|>,
//    <|java+class:///SomeOtherClass|,|java+method:///SomeOtherClass/SomePrivateMethod()|>
//  },
//  @documentation={<|java+compilationUnit:///Users/Bouke/Documents/workspace3/HelloWorld/src/HelloWorld.java|,|file:///Users/Bouke/Documents/workspace3/HelloWorld/src/HelloWorld.java|(80,48,<4,8>,<4,56>)>},
//  @modifiers={
//    <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,static()>,
//    <|java+method:///SomeOtherClass/SomeMethod()|,public()>,
//    <|java+field:///SomeOtherClass/privmv|,private()>,
//    <|java+class:///SomeOtherClass|,public()>,
//    <|java+class:///HelloWorld|,public()>,
//    <|java+field:///SomeOtherClass/pubmv|,public()>,
//    <|java+method:///SomeOtherClass/SomePrivateMethod()|,private()>,
//    <|java+method:///HelloWorld/main(java.lang.Stri...

// If we want to look at metrics, we can look at containment. 
public rel[loc,loc] containment =  tree@containment;
//rel[loc from,loc to]: {
//  <|java+class:///SomeOtherClass|,|java+field:///SomeOtherClass/privmv|>,
//  <|java+compilationUnit:///Users/Bouke/Documents/workspace3/HelloWorld/src/HelloWorld.java|,|java+class:///HelloWorld|>,
//  <|java+class:///SomeOtherClass|,|java+field:///SomeOtherClass/pubmv|>,
//  <|java+class:///HelloWorld|,|java+method:///HelloWorld/main(java.lang.String%5B%5D)|>,
//  <|java+method:///HelloWorld/main(java.lang.String%5B%5D)|,|java+parameter:///HelloWorld/main(java.lang.String%5B%5D)/scope(args)/scope(0)/args|>,
//  <|java+class:///SomeOtherClass|,|java+method:///SomeOtherClass/SomeMethod()|>,
//  <|java+compilationUnit:///Users/Bouke/Documents/workspace3/HelloWorld/src/SomeOtherClass.java|,|java+class:///SomeOtherClass|>,
//  <|java+class:///SomeOtherClass|,|java+method:///SomeOtherClass/SomePrivateMethod()|>
//}

// We 